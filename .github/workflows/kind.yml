name: "Test an example service using Kind"
on: [pull_request, push]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Testing
        run: |
          kubectl wait nodes --for condition=Ready --all
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Deploy Application
        run: |
          kubectl create deployment app-deploy --image=ghcr.io/${{ github.repository_owner }}/app:latest
          kubectl wait pods --for condition=Ready --timeout=90s --all
          kubectl expose deployment/app-deploy --type=NodePort --port 8080 --target-port 5000
      - name: Test Deployment
        run: |
          export NODE_PORT=$(kubectl get services/app-deploy -o go-template='{{(index .spec.ports 0).nodePort}}')
          echo NODE_PORT=${NODE_PORT}
          kubectl describe services/app-deploy
          export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
          kubectl exec -ti $POD_NAME -- curl localhost:5000/health
      - name: Cleanup
        if: always()
        run: |
          kubectl get pods
          kubectl describe deploy app-deploy
          export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
          kind delete cluster --name test-cd